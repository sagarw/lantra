<?php

/**
 * @file
 * Flag note module install/schema/update hooks.
 */

/**
 * Implementation of hook_uninstall().
 */
function flag_note_uninstall() {
  db_query("DELETE FROM {variable} WHERE name LIKE 'flag_note_%'");
}

/**
 * Implementation of hook_schema().
 */
function flag_note_schema() {
  $flag_content = drupal_get_schema_unprocessed('flag', 'flag_content');
  $flag_content['fields']['fcid']['type'] = 'int';
  $schema['flag_note']['fields'] = array_merge($flag_content['fields'],
    array(
      'note' => array('type' => 'text', 'not null' => FALSE),
  ));
  $schema['flag_note']['fields']['fnid'] = array('type' => 'serial');
  $schema['flag_note']['primary key'] = array('fnid');
  $schema['flag_note']['indexes'] = array(
    'fcid' => array('fcid'),
    'fid' => array('fid'),
    'content_type_content_id' => array('content_type', 'content_id'),
  );
  return $schema;
}

function flag_note_update_7201() {
  $ret = array();
  cache_clear_all();
  return $ret;
}

/**
 * Copy all values for each flag from system variables to flag options
 */
function flag_note_update_7202() {
  $ret = array();
  $link_type = flag_note_flag_link_types();
  foreach (flag_get_flags() as $flag) {
    if ($flag->link_type == 'flag_note_form') {
      foreach ($link_type['flag_note_form']['options'] as $option => $value) {
        if (!isset($flag->$option)) {
          $flag->$option = variable_get($option .'_'. $flag->name, $value);
          variable_del($option  .'_'. $flag->name);
        }
      }
      $flag->update();
    }
  }
  return $ret;
}
